{"version":3,"file":"bundle.js","sources":["webpack/bootstrap","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/layout/src/layout/layout.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/layout/src/tree/index.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/layout/src/tree/node.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/layout/src/utils/DummyComponent/DummyComponent.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/layout/src/utils/DummyComponent/index.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/layout/src/utils/dummycomponent/DummyComponent.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/layout/src/utils/dummycomponent/index.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/layout/src/utils/index.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/layout/src/utils/utils.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/src/controller/controller.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/src/data-adapters/data-parser.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/src/data-adapters/html-data.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/src/main.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/src/models/data-point.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/src/renderers/html-renderer.js","/Users/ujjaldutta/Documents/FusionChartsWorks/FusionBoard/UI/UIGenerator/app/src/utils/utils.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Node from '../tree';\nimport { xExtraSpace, yExtraSpace, determineBoundBox } from '../utils';\n\nclass Layout {\n    constructor(measurements, config) {\n        this.measurements = measurements;\n        this.config = config;\n        this.root = this.createTree(this.config, null);\n        this.setBoundBox();\n    }\n\n    createTree(config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node._parentCut = parent.getCutType();\n            parent.addChildren([node]);\n        } else {\n            this.root = node;\n        }\n        for (let lane of config.lanes) {\n            this.createTree(lane, node);\n        }\n\n        return this.root;\n    }\n\n    allocateBoundingBox(node) {\n        const totalWeight = node.children.map(child => child.model.ratioWeight).reduce((carry, val) => carry + val, 0);\n\n        node.children.forEach((child, i, children) => {\n            let lastSibling = children[i - 1],\n                ratio = child.model.ratioWeight / totalWeight;\n\n            if (child._parentCut === 'h') {\n                child.boundBox.width = child.parent.boundBox.width;\n                child.boundBox.height = child.parent.boundBox.height * ratio;\n                child.boundBox.left = child.parent.boundBox.left;\n                child.boundBox.top = i ? lastSibling.boundBox.top + lastSibling.boundBox.height : 0;\n            } else {\n                child.boundBox.width = child.parent.boundBox.width * ratio;\n                child.boundBox.height = child.parent.boundBox.height;\n                child.boundBox.top = child.parent.boundBox.top;\n                child.boundBox.left = i ? lastSibling.boundBox.left + lastSibling.boundBox.width : 0;\n            }\n            this.allocateBoundingBox(child);\n        });\n    }\n\n    setBoundBox() {\n        this.root.boundBox = {\n            top: 0,\n            left: 0,\n            width: this.measurements.width,\n            height: this.measurements.height\n        };\n        this.allocateBoundingBox(this.root);\n    }\n\n    negotiateDimension(node) {\n        let preferred,\n            cumultiveExtraSpaceAmt = 0,\n            alteredDim,\n            nonAlteredDim,\n            childrenLength = node.children.length;\n\n        for (let index = 0; index < childrenLength; index++) {\n            let fn,\n                extraSpaceAmt,\n                child = node.children[index];\n\n            if (child._parentCut === 'h') {\n                fn = yExtraSpace;\n                alteredDim = 'height';\n                nonAlteredDim = 'width';\n            } else {\n                fn = xExtraSpace;\n                alteredDim = 'width';\n                nonAlteredDim = 'height';\n            }\n            // if vertical then get extra height from other node and push it to the preferred node.\n            // for horizontal cut the same thing is to be done with width\n            if (child.isPreferred()) {\n                // push extra space in sink. Execute it when all non preferred space are computed.\n                preferred = child;\n\n                continue;\n            }\n            // reduce own height and save it in a var\n            cumultiveExtraSpaceAmt += extraSpaceAmt = fn(child);\n            child.boundBox[alteredDim] -= extraSpaceAmt;\n            // update nonaltered dim from parent for any change which happened during negotiation\n            child.boundBox[nonAlteredDim] = child.parent.boundBox[nonAlteredDim];\n\n            this.negotiateDimension(child);\n        }\n\n        if (preferred) {\n            preferred.boundBox[alteredDim] += cumultiveExtraSpaceAmt;\n            preferred.boundBox[nonAlteredDim] = preferred.parent.boundBox[nonAlteredDim];\n            this.negotiateDimension(preferred);\n        }\n    }\n\n    computePosition(node) {\n        node.children.forEach((child, i, children) => {\n            let boundBox = determineBoundBox(child.boundBox, i, children, child);\n            child.boundBox = boundBox;\n            this.computePosition(child);\n        });\n    }\n\n    setHostPosition(node) {\n        node.children.forEach(child => {\n            Layout.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig(node) {\n        let boundBox = node.boundBox;\n        if (node.model.host && node.model.host.setSpatialConfig) {\n            node.model.host.setSpatialConfig(boundBox.left, boundBox.top, boundBox.width, boundBox.height);\n        }\n    }\n\n    negotiate() {\n        this.negotiateDimension(this.root);\n        this.computePosition(this.root);\n        this.setHostPosition(this.root);\n        return this;\n    }\n\n    tree() {\n        return this.root;\n    }\n}\n\nexport default Layout;","import Node from './node';\n\nexport default Node;","import { getNodeId } from '../utils';\n\nclass Node {\n    constructor(data) {\n        this.model = data;\n        this.parent = null;\n        this.children = [];\n\n        this.boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = getNodeId();\n    }\n\n    addChildren(entries) {\n        this.children.push(...entries);\n        entries.forEach(e => {\n            e.parent = this;\n        });\n    }\n\n    isRoot() {\n        return this.parent === null;\n    }\n\n    isLeaf() {\n        return !this.children.length;\n    }\n\n    getCutType() {\n        return this.model.cut;\n    }\n\n    isPreferred() {\n        return !!this.model.preferred;\n    }\n\n}\n\nexport default Node;","/* eslint-disable require-jsdoc */\nclass DummyComponent {\n    constructor(seed, dimensions) {\n        this.seed = seed;\n        this.dimensions = dimensions;\n        this.position = null;\n    }\n\n    getLogicalSpace() {\n        return {\n            width: this.dimensions.width - 1 * this.seed,\n            height: this.dimensions.height - 1 * this.seed\n        };\n    }\n\n    setSpatialConfig(x, y, width, height) {\n        this.position = { top: y, left: x };\n        this.dimensions = { width, height };\n    }\n}\n\nexport default DummyComponent;","import DummyComponent from './DummyComponent';\n\nexport default DummyComponent;","/* eslint-disable require-jsdoc */\nclass DummyComponent {\n    constructor(seed, dimensions) {\n        this.seed = seed;\n        this.dimensions = dimensions;\n        this.position = null;\n    }\n\n    getLogicalSpace() {\n        return {\n            width: this.dimensions.width - 1 * this.seed,\n            height: this.dimensions.height - 1 * this.seed\n        };\n    }\n\n    setSpatialConfig(x, y, width, height) {\n        this.position = { top: y, left: x };\n        this.dimensions = { width, height };\n    }\n}\n\nexport default DummyComponent;","import DummyComponent from './DummyComponent';\n\nexport default DummyComponent;","import DummyComponent from './dummycomponent';\nimport { isEqual, getNodeId, yExtraSpace, xExtraSpace, determineBoundBox } from './utils';\n\nexport { DummyComponent, isEqual, getNodeId, yExtraSpace, xExtraSpace, determineBoundBox };","/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nfunction isEqual(value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nconst getNodeId = function () {\n    let _uid = 0;\n    return function () {\n        ++_uid;\n        return `node-${_uid}`;\n    };\n}();\n\nfunction yExtraSpace(node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node);\n    } else if (node.getCutType() === 'h') {\n        node.children.forEach(child => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model.host && node.model.host.getLogicalSpace) {\n        let containerHeight = node.boundBox.height,\n            hostHeight = node.model.host.getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nfunction smallestExtraHeightHorizontally(node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children.forEach(child => {\n        let h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nfunction xExtraSpace(node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node);\n    } else if (node.getCutType() === 'v') {\n        node.children.forEach(child => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model.host && node.model.host.getLogicalSpace) {\n        let containerWidth = node.boundBox.width,\n            hostWidth = node.model.host.getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nfunction smallestExtraWidthVertically(node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children.forEach(child => {\n        let w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nfunction determineBoundBox(bb, i, arr, instance) {\n    if (i) {\n        // if not first sibling, take boundbox from previous sibling\n        let lastSibling = arr[i - 1];\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance._parentCut === 'h' ? lastSibling.boundBox.top + lastSibling.boundBox.height : lastSibling.boundBox.top,\n\n            left: instance._parentCut === 'h' ? lastSibling.boundBox.left : lastSibling.boundBox.left + lastSibling.boundBox.width\n        };\n    }\n    // if first sibling, take boundbox from parent\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: instance.parent.boundBox.top,\n        left: instance.parent.boundBox.left\n    };\n}\n\nexport { isEqual, getNodeId, yExtraSpace, xExtraSpace, determineBoundBox };","import { HTMLRenderer } from '../renderers/html-renderer';\n\nexport class Controller {\n  constructor(data, renderer, rendererId) {\n    this.data = data;\n    this.renderer = renderer;\n    this.renderer_id = rendererId;\n  }\n\n  render() {\n    switch (this.renderer) {\n      case 'html':\n        this.renderHTML();\n        break;\n      case 'svg':\n        this.renderSVG();\n        break;\n      case 'canvas':\n        this.renderCANVAS();\n        break;\n    }\n  }\n\n  renderHTML() {\n    let renderer = new HTMLRenderer(this.data);\n    renderer.createhtml(this.renderer_id);\n  }\n}","\nimport { DataPoint } from '../models/data-point';\n\nexport class DataParser {\n  constructor(data) {\n    this.data = data;\n  }\n\n  defaultDataPointLogic() {\n    let nodepoints = [];\n    this.getnodePoints(this.data, nodepoints);\n    return nodepoints;\n  }\n\n  getnodePoints(node, nodepoints) {\n    let datapoint = new DataPoint(node.boundBox, node._id);\n    nodepoints.push(datapoint);\n    node.children.forEach(child => {\n      this.getnodePoints(child, nodepoints);\n    });\n  }\n}","/* eslint no-useless-constructor: \"off\" */\nimport { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n  constructor(data) {\n    super(data);\n  }\n\n  getCoordinates() {\n    return super.defaultDataPointLogic();\n  }\n}","import Layout from '../layout/src/layout/layout';\nimport { Controller } from './controller/controller';\nimport Component from '../layout/src/utils/DummyComponent';\n\nconst width = 600;\n\nconst height = 600;\nconst component1 = new Component(10, {\n  width: width / 2,\n  height: width / 2\n});\n\nconst component2 = new Component(10, {\n  width: width / 2,\n  height: width / 2\n});\n\nconst component3 = new Component(10, {\n  width: width / 2,\n  height: width / 2\n});\n\nconst component4 = new Component(10, {\n  width: width / 2,\n  height: width / 2\n});\n\nconst config = {\n  host: null,\n  cut: 'v',\n  ratioWeight: 1,\n  lanes: [{\n    host: null,\n    cut: 'h',\n    ratioWeight: 1,\n    preferred: true,\n    lanes: [{\n      host: component1,\n      cut: null,\n      ratioWeight: 1,\n      preferred: true,\n      lanes: []\n    }, {\n      host: component2,\n      cut: null,\n      ratioWeight: 1,\n      lanes: []\n    }]\n  }, {\n    host: null,\n    cut: 'h',\n    ratioWeight: 1,\n    lanes: [{\n      host: component3,\n      cut: null,\n      ratioWeight: 1,\n      lanes: []\n    }, {\n      host: component4,\n      cut: null,\n      ratioWeight: 1,\n      preferred: true,\n      lanes: []\n    }]\n  }]\n};\n\nlet layout = new Layout({\n  width, height\n}, config);\n\nlet root = layout.negotiate().tree();\n\nlet con = new Controller(root, 'html', 'board');\ncon.render();","\nexport class DataPoint {\n  constructor(boundBox, _id) {\n    this.top = boundBox.top;\n    this.left = boundBox.left;\n    this.width = boundBox.width;\n    this.height = boundBox.height;\n    this._id = _id;\n  }\n}","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils/utils';\n\nexport class HTMLRenderer {\n  constructor(data) {\n    this.data = data;\n    this.coordinates = new HTMLDataAdapter(this.data).getCoordinates();\n  }\n\n  createhtml(id) {\n    let mainDiv = document.getElementById(id);\n    this.coordinates.forEach(node => {\n      mainDiv.appendChild(this.createAndPositionDiv(node));\n    });\n  }\n\n  createAndPositionDiv(node) {\n    let div = document.createElement('div');\n    div.style.position = 'absolute';\n    div.style.left = node.left + 'px';\n    div.style.top = node.top + 'px';\n    div.style.height = node.height + 'px';\n    div.style.width = node.width + 'px';\n    div.style.border = '1px dotted red';\n    div.addEventListener('mouseover', Utils.onHover);\n    div.addEventListener('mouseleave', Utils.offHover);\n    div.id = node._id;\n    return div;\n  }\n}","export class Utils {\n  static onHover(data) {\n    console.log('Hover');\n    data.target.style.outline = 'cyan solid 1px';\n  }\n\n  static offHover(data) {\n    data.target.style.outline = '';\n  }\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnzIA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3CA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1EA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}